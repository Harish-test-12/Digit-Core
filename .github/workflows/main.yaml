name: Build Pipeline
on:
  push:
    branches:
      - 'master'
      - 'core-2.9-lts-mvn-check'
  workflow_dispatch:
    inputs:
      folder:
        description: 'Select the folder which contains your services'
        required: true
        type: choice
        options:
          - core-services
          - business-services
      serviceName:
        description: 'Provide the service name you want to build'
        required: true
      dbMigration:
        description: Enable if you require DB migration for this service
        required: true
        type: boolean
      branch: # New input for selecting the branch
        description: 'Specify the branch you want to build'
        required: true
        default: master

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref_name }}

      - name: Extract branch name and commit hash
        id: tag
        run: |
          BRANCH=${GITHUB_REF##*/}
          COMMIT_HASH=$(git rev-parse --short HEAD)

          # Fallback if variables are empty
          [ -z "$BRANCH" ] && BRANCH="default-branch"
          [ -z "$COMMIT_HASH" ] && COMMIT_HASH="no-commit"

          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV

      - name: Sanitize Inputs
        run: |
          SERVICE_NAME="${{ github.event.inputs.serviceName }}"
          BRANCH_NAME="${{ env.BRANCH }}"
          
          # Replace invalid characters with dashes
          SERVICE_NAME_CLEANED=$(echo $SERVICE_NAME | sed 's/[^a-zA-Z0-9._-]/-/g')
          BRANCH_NAME_CLEANED=$(echo $BRANCH_NAME | sed 's/[^a-zA-Z0-9._-]/-/g')
          
          echo "SERVICE_NAME_CLEANED=$SERVICE_NAME_CLEANED" >> $GITHUB_ENV
          echo "BRANCH_NAME_CLEANED=$BRANCH_NAME_CLEANED" >> $GITHUB_ENV

      # Docker Login Step
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: build/maven/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.SERVICE_NAME_CLEANED }}:${{ env.BRANCH_NAME_CLEANED }}-${{ env.COMMIT_HASH }}-${{ steps.version.outputs.version }}
          build-args: WORK_DIR=${{ github.event.inputs.folder }}/${{ env.SERVICE_NAME_CLEANED }}

      - name: DB Build and push
        if: ${{ github.event.inputs.dbMigration }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ github.event.inputs.folder }}/${{ env.SERVICE_NAME_CLEANED }}/src/main/resources/db
          file: ${{ github.event.inputs.folder }}/${{ env.SERVICE_NAME_CLEANED }}/src/main/resources/db/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.SERVICE_NAME_CLEANED }}-db:${{ env.BRANCH_NAME_CLEANED }}-${{ env.COMMIT_HASH }}-${{ steps.version.outputs.version }}
