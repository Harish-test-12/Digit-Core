name: Build Pipeline
on:
  workflow_dispatch:
    inputs:
      folder:
        description: 'Select the folder which contains your services'
        required: true
        type: choice
        options:
          - core-services
          - business-services
      serviceName:
        description: 'Provide the service name you want to build'
        required: true
      dbMigration:
        description: 'Enable if you require DB migration for this service'
        required: true
        type: boolean
      branch:
        description: 'Select the branch you want to build'
        required: true
        type: choice
        options:
          - master
          - core-2.9-lts-mvn-check

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate version file
        id: version
        run: |
          VERSION_FILE=".version"
          BRANCH=${{ github.event.inputs.branch }}
          COMMIT_HASH=$(git rev-parse --short HEAD || echo "no-commit")
          VERSION=$(cat ${VERSION_FILE} 2>/dev/null || echo "0")

          NEW_VERSION=$((VERSION + 1))
          echo "${NEW_VERSION}" > ${VERSION_FILE}

          # Export variables
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV
          echo "COMMIT_HASH=${COMMIT_HASH}" >> $GITHUB_ENV
          echo "VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "::set-output name=tag::${BRANCH}-${COMMIT_HASH}-${NEW_VERSION}"

      - name: Save version file
        uses: actions/upload-artifact@v3
        with:
          name: version-file
          path: .version

      - name: Verify artifact upload
        run: ls -la

  DB_Build:
    needs: Build
    if: ${{ github.event.inputs.dbMigration == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Download version file
        uses: actions/download-artifact@v3
        with:
          name: version-file

      - name: Verify downloaded artifact
        run: |
          if [ ! -f .version ]; then
            echo "Artifact not found!"
            exit 1
          fi
          echo "Downloaded artifact:"
          cat .version

      - name: Generate Docker tags for DB
        id: tag
        run: |
          VERSION=$(cat .version)
          BRANCH=${{ github.event.inputs.branch }}
          COMMIT_HASH=$(git rev-parse --short HEAD || echo "no-commit")

          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV
          echo "COMMIT_HASH=${COMMIT_HASH}" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "::set-output name=tag::${BRANCH}-${COMMIT_HASH}-${VERSION}"

      - name: Build and push database Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ github.event.inputs.folder }}/${{ github.event.inputs.serviceName }}/src/main/resources/db
          file: ${{ github.event.inputs.folder }}/${{ github.event.inputs.serviceName }}/src/main/resources/db/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ github.event.inputs.serviceName }}-db:${{ env.BRANCH }}-${{ env.COMMIT_HASH }}-${{ env.VERSION }}
