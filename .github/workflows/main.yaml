name: Build Pipeline
on:
  push:
    branches:
      - 'master'
  workflow_dispatch:
    inputs:
      folder:
        description: 'Select the folder which contain your services'
        required: true
        type: choice
        options:
          - core-services
      serviceName:
        description: 'Provide the service name you want to build'
        required: true
      # dbMigration:
      #   description: Enable if you require db migration to this service
      #   required: true
      #   type: boolean
      libraries:
        description: Enable if you want to upload to libraries
        required: true
        type: boolean
jobs:
  Build:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps: 
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Display branch
        run: |
          echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "BRANCH=${GITHUB_REF##*/}"
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PWD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Display branch name
        run: git branch

      - name: Check if DB folder exists
        id: check_folder
        run: |
          if [ -d "${{ github.event.inputs.folder }}/${{ github.event.inputs.serviceName }}/src/main/resources/db" ]; then
            echo "folder_exists=true" >> $GITHUB_ENV
          else
            echo "folder_exists=false" >> $GITHUB_ENV
          fi
      - name: check DB Environment Variable
        run: |
          echo ${{ env.folder_exists }}
      - name: Get tags from Docker Hub
        id: get_docker_tags
        run: |
          # Fetch tags from Docker Hub
          TAGS=$(curl -s "https://hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USER }}/${{ github.event.inputs.serviceName }}/tags?page_size=100" | jq -r '.results[].name')
          # Filter tags for the specific branch
          LATEST_TAG=$(echo "$TAGS" | grep "^${{ env.BRANCH }}-" | sort -V | tail -n 1)
          echo "Latest tag: $LATEST_TAG"

          if [ -z "$LATEST_TAG" ]; then
            echo "NEXT_TAG=${{ env.BRANCH }}-1" >> $GITHUB_ENV
          else
            # Extract the numerical part and increment it
            TAG_NUMBER=$(echo "$LATEST_TAG" | awk -F- '{print $NF}')
            NEXT_TAG="${{ env.BRANCH }}-$((TAG_NUMBER + 1))"
            echo "NEXT_TAG=$NEXT_TAG" >> $GITHUB_ENV
          fi

      # - name: Get the latest tag
      #   id: get_tag
      #   run: |
      #     TAG=$(git tag --list "${{ env.BRANCH }}-*.*" --sort=-v:refname | head -n 1)
      #     echo "Latest tag: $TAG"
      #     if [ -z "$TAG" ]; then
      #       echo "TAG_NUMBER=0" >> $GITHUB_ENV
      #     else
      #       TAG_NUMBER=$(echo $TAG | awk -F- '{print $NF}')
      #       echo "TAG_NUMBER=$TAG_NUMBER" >> $GITHUB_ENV
      #     fi

      # - name: Increment the tag number
      #   id: increment_tag
      #   run: |
      #     NEW_TAG_NUMBER=$((TAG_NUMBER+1))
      #     echo "NEW_TAG_NUMBER=$NEW_TAG_NUMBER" >> $GITHUB_ENV
      #     NEW_TAG="${{ env.BRANCH }}-$NEW_TAG_NUMBER"
      #     echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
      #     echo "New tag: $NEW_TAG"

      - name: Build and push
        if: ${{ github.event.inputs.libraries == 'false' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: build/maven/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/${{ github.event.inputs.serviceName }}:${{ env.NEXT_TAG }}
          build-args: WORK_DIR=${{ github.event.inputs.folder }}/${{ github.event.inputs.serviceName }}
      
      - name: DB Build and push
        # if: ${{ github.event.inputs.dbMigration && github.event.inputs.libraries == 'false' }} 
        if: env.folder_exists == 'true' && github.event.inputs.libraries == 'false'
        uses: docker/build-push-action@v5
        with:
          context: ${{ github.event.inputs.folder }}/${{ github.event.inputs.serviceName }}/src/main/resources/db
          file: ${{ github.event.inputs.folder }}/${{ github.event.inputs.serviceName }}/src/main/resources/db/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/${{ github.event.inputs.serviceName }}-db:${{ env.NEXT_TAG }}

      # - name: Libraries Build and push
      #   if: ${{ github.event.inputs.libraries == 'true' }} 
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: ${{ github.event.inputs.folder }}/libraries/${{ github.event.inputs.serviceName }}/Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USER }}/${{ github.event.inputs.serviceName }}:${{ env.NEXT_TAG }}
      #     build-args: |
      #       WORK_DIR=${{ github.event.inputs.folder }}/libraries/${{ github.event.inputs.serviceName }}
      #       nexusUsername=${{ secrets.NEXUS_USER }}
      #       nexusPassword=${{ secrets.NEXUS_PWD }}

      - name: Display Image details
        run: |
          echo "${{ secrets.DOCKERHUB_USER }}/${{ github.event.inputs.serviceName }}:${{ env.NEXT_TAG }}"
          echo "${{ secrets.DOCKERHUB_USER }}/${{ github.event.inputs.serviceName }}-db:${{ env.NEXT_TAG }}"

      # - name: Build Libraries
      #   if: ${{ github.event.inputs.libraries }} 
      #   run: |
      #     cd ${{ github.event.inputs.folder }}/libraries/${{ github.event.inputs.serviceName }}
      #     cat nginx-dockerfile
      #     docker build --build-arg WORK_DIR=${{ github.event.inputs.folder }}/libraries/${{ github.event.inputs.serviceName }} --build-arg nexusUsername=${{ secrets.NEXUS_USER }} --build-arg nexusPassword=${{ secrets.NEXUS_PWD }} -t ${{ github.event.inputs.serviceName }}:latest -f nginx-dockerfile .
      
      # - name: NGINX Build
      #   run: |
      #     cd core-services/libraries/enc-client
      #     cat nginx-dockerfile
      #     docker build -t nginx:latest -f nginx-dockerfile .

      # - name: View Dockerfile
      #   if: ${{ github.event.inputs.libraries }} 
      #   run: |
      #     cat ${{ github.event.inputs.folder }}/libraries/${{ github.event.inputs.serviceName }}/Dockerfile
